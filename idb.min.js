/*!
 * idb.js IndexedDB wrapper v1.0
 * Licensed under the MIT license
 * Copyright (c) 2018 Lukas Jans
 * https://luniverse.de/
 */
function IDB(e){let r=new Promise((r,t)=>{var n=indexedDB.open(e.name,e.version||1);n.onerror=(()=>t(n.error)),n.onsuccess=(()=>r(n.result)),n.onupgradeneeded=(()=>{var r=n.result;for(var t of r.objectStoreNames)r.deleteObjectStore(t);for(var o of e.tables)r.createObjectStore(o.name,o.options)})}),t=function(e){let t=()=>new Promise((t,n)=>{r.then(r=>{t(r.transaction(e,"readwrite").objectStore(e))})}),n=e=>new Promise((r,t)=>{e.onerror=(()=>t(e.error)),e.onsuccess=(()=>r(e.result))});this.set=((e,r)=>t().then(t=>n(t.put(r,e)))),this.get=(e=>t().then(r=>n(r.get(e)))),this.all=(()=>t().then(e=>new Promise((r,t)=>{var n={},o=e.openCursor();o.onerror=(()=>t(o.error)),o.onsuccess=(()=>{var e=o.result;e?(n[e.key]=e.value,e.continue()):r(n)})}))),this.where=(e=>this.all().then(r=>{var t={};for(var n in r)e(r[n])&&(t[n]=r[n]);return t})),this.clear=(()=>t().then(e=>n(e.clear()))),this.delete=(e=>t().then(r=>n(r.delete(e)))),this.add=(e=>t().then(r=>n(r.put(e))))};for(var n of e.tables)this[n.name]=new t(n.name)}